{"version":3,"sources":["components/Form/Form.js","components/Table/TableRow/TableRow.js","getFormattedDate.js","components/Table/Table.js","getTime.js","data/workoutsData.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handleFormSubmit","onSubmit","handleInputChange","onChange","form","className","event","preventDefault","htmlFor","type","id","name","required","value","date","min","max","distance","TableRow","handleDeleteClick","onDeleteClick","handleEditClick","onEditClick","href","onClick","getFormattedDate","string","Date","toString","Intl","DateTimeFormat","day","month","year","format","Table","workouts","map","workout","getTime","Infinity","App","useState","workoutsData","setWorkouts","setForm","state","index","editingMode","setEditingMode","toggleEditingMode","getWorkoutIndex","target","closest","findIndex","updatedWorkouts","slice","length","nanoid","String","prevForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6893b44b.chunk.js","sourcesContent":["import './Form.css';\n\nexport default function Form(props) {\n  const {\n    onSubmit: handleFormSubmit,\n    onChange: handleInputChange,\n    form,\n  } = props;\n\n  return (\n    <form\n      className=\"Form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        handleFormSubmit(form);\n      }}\n    >\n      <div className=\"Form-control\">\n        <label htmlFor=\"date\">Дата (ДД.ММ.ГГ)</label>\n        <input\n          className=\"Form-control__date\"\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          required\n          value={form.date}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"Form-control\">\n        <label htmlFor=\"distance\">Пройдено (км.)</label>\n        <input\n          className=\"Form-control__distance\"\n          type=\"number\"\n          id=\"distance\"\n          name=\"distance\"\n          min=\"0\"\n          max=\"100\"\n          required\n          value={form.distance}\n          onChange={handleInputChange}\n        />\n      </div>\n      <button\n        className=\"Form-control__button-ok\"\n        type=\"submit\"\n      >\n        OK\n      </button>\n    </form>\n  );\n}\n","import './TableRow.css';\n\nexport default function TableRow(props) {\n  const {\n    id,\n    date,\n    distance,\n    onDeleteClick: handleDeleteClick,\n    onEditClick: handleEditClick,\n  } = props;\n\n  return (\n    <tr className=\"TableRow\" id={id}>\n      <td>{date}</td>\n      <td>{distance}</td>\n      <td>\n        <a\n          className=\"TableRow-control__edit\"\n          href=\"#0\"\n          onClick={handleEditClick}\n        >\n          &#9998;\n        </a>\n        <a\n          className=\"TableRow-control__delete\"\n          href=\"#0\"\n          onClick={handleDeleteClick}\n        >\n          &#10008;\n        </a>\n      </td>\n    </tr>\n  );\n}\n","export default function getFormattedDate(string) {\n  const date = new Date(string);\n\n  if (date.toString() === 'Invalid Date') {\n    return null;\n  }\n\n  const options = { day: 'numeric', month: 'numeric', year: 'numeric' };\n\n  const formattedDate = new Intl.DateTimeFormat('ru-RU', options).format(date);\n\n  return formattedDate;\n}\n","import './Table.css';\nimport TableRow from './TableRow/TableRow';\nimport getFormattedDate from '../../getFormattedDate';\n\nexport default function Table(props) {\n  const {\n    workouts,\n    onDeleteClick: handleDeleteClick,\n    onEditClick: handleEditClick,\n  } = props;\n\n  return (\n    <table className=\"Table\">\n      <thead>\n        <tr>\n          <th>Дата (ДД.ММ.ГГ)</th>\n          <th>Пройдено (км.)</th>\n          <th>Действия</th>\n        </tr>\n      </thead>\n      <tbody>\n        {workouts.map((workout) => {\n          return (\n            <TableRow\n              key={workout.id}\n              id={workout.id}\n              date={getFormattedDate(workout.date)}\n              distance={workout.distance}\n              onDeleteClick={handleDeleteClick}\n              onEditClick={handleEditClick}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n","export default function getTime(string) {\n  const date = new Date(string);\n\n  if (date.toString() === 'Invalid Date') {\n    return Infinity;\n  }\n\n  const time = date.getTime();\n\n  return time;\n}\n","const workouts = [\n  {\n    id: '76OOH7xQPaqkVY6WJhpJ5',\n    date: '2019-07-20',\n    distance: '5.7',\n  },\n  {\n    id: 'Vmii-9M7fj9C6LpjSx1Eh',\n    date: '2019-07-19',\n    distance: '14.2',\n  },\n  {\n    id: 'WJ0HT1M9kA-IeAcSq6Quu',\n    date: '2019-07-18',\n    distance: '3.4',\n  },\n];\n\nexport default workouts;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form/Form';\nimport Table from './components/Table/Table';\nimport getTime from './getTime';\nimport workoutsData from './data/workoutsData';\n\nfunction App() {\n  const [workouts, setWorkouts] = useState(workoutsData);\n  const [form, setForm] = useState({ date: '', distance: '' });\n  const [editingMode, setEditingMode] = useState({ state: false, index: '' });\n\n  function toggleEditingMode(index) {\n    if (editingMode.state) {\n      setEditingMode({ state: false, index: '' });\n    } else {\n      setEditingMode({ state: true, index: index });\n    }\n  }\n\n  function handleFormSubmit(form) {\n    let updatedWorkouts;\n\n    if (editingMode.state) {\n      const { index } = editingMode;\n\n      updatedWorkouts = [\n        ...workouts.slice(0, index),\n        {\n          id: workouts[index].id,\n          date: form.date,\n          distance: form.distance,\n        },\n        ...workouts.slice(index + 1),\n      ];\n\n      toggleEditingMode();\n    } else {\n      const index = workouts.findIndex(\n        (workout) => getTime(workout.date) <= getTime(form.date)\n      );\n\n      if (index === -1) {\n        updatedWorkouts = [\n          ...workouts.slice(0, workouts.length),\n          {\n            id: nanoid(),\n            date: form.date,\n            distance: form.distance,\n          },\n        ];\n      } else if (getTime(workouts[index].date) === getTime(form.date)) {\n        updatedWorkouts = [\n          ...workouts.slice(0, index),\n          {\n            id: workouts[index].id,\n            date: workouts[index].date,\n            distance: String(+workouts[index].distance + +form.distance),\n          },\n          ...workouts.slice(index + 1),\n        ];\n      } else {\n        updatedWorkouts = [\n          ...workouts.slice(0, index),\n          {\n            id: nanoid(),\n            date: form.date,\n            distance: form.distance,\n          },\n          ...workouts.slice(index),\n        ];\n      }\n    }\n\n    setWorkouts(updatedWorkouts);\n\n    setForm({ date: '', distance: '' });\n  }\n\n  function handleFormChange({ target }) {\n    const { name, value } = target;\n\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  }\n\n  function getWorkoutIndex(target) {\n    const id = target.closest('.TableRow').id;\n\n    const index = workouts.findIndex((workout) => workout.id === id);\n\n    return index;\n  }\n\n  function handleDeleteClick({ target }) {\n    const index = getWorkoutIndex(target);\n\n    const updatedWorkouts = [\n      ...workouts.slice(0, index),\n      ...workouts.slice(index + 1),\n    ];\n\n    setWorkouts(updatedWorkouts);\n  }\n\n  function handleEditClick({ target }) {\n    const index = getWorkoutIndex(target);\n\n    setForm({ date: workouts[index].date, distance: workouts[index].distance });\n\n    toggleEditingMode(index);\n  }\n\n  return (\n    <div className=\"App-container\">\n      <Form\n        onSubmit={handleFormSubmit}\n        onChange={handleFormChange}\n        form={form}\n      />\n      <Table\n        workouts={workouts}\n        onDeleteClick={handleDeleteClick}\n        onEditClick={handleEditClick}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}